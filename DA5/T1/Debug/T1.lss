
T1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000416  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003a2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000416  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000416  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000448  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000117  00000000  00000000  000004c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000b5  00000000  00000000  000005d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000000ee  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  0000077c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000161  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000096  00000000  00000000  00000941  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000009d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
  88:	0c 94 cf 01 	jmp	0x39e	; 0x39e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <adc_init>:

volatile uint8_t ADCvalue; // Global variable, set to volatile if used withIS

void adc_init (void)
{
	ADMUX = 0; // use ADC0
  90:	ec e7       	ldi	r30, 0x7C	; 124
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0) | (1 <<REFS1); // use AVcc as the reference
  96:	80 81       	ld	r24, Z
  98:	80 6c       	ori	r24, 0xC0	; 192
  9a:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR); // Right adjust for 8 bit resolution
  9c:	80 81       	ld	r24, Z
  9e:	80 62       	ori	r24, 0x20	; 32
  a0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (0 << ADPS0); // 64 prescale for 8Mhz
  a2:	ea e7       	ldi	r30, 0x7A	; 122
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	86 60       	ori	r24, 0x06	; 6
  aa:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE); // Set ADC Auto Trigger Enable
  ac:	80 81       	ld	r24, Z
  ae:	80 62       	ori	r24, 0x20	; 32
  b0:	80 83       	st	Z, r24
	ADCSRB = 0; // 0 for free running mode
  b2:	10 92 7b 00 	sts	0x007B, r1
	ADCSRA |= (1 << ADEN); // Enable the ADC
  b6:	80 81       	ld	r24, Z
  b8:	80 68       	ori	r24, 0x80	; 128
  ba:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE); // Enable Interrupts
  bc:	80 81       	ld	r24, Z
  be:	88 60       	ori	r24, 0x08	; 8
  c0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // Start the ADC conversion
  c2:	80 81       	ld	r24, Z
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	80 83       	st	Z, r24
  c8:	08 95       	ret

000000ca <__vector_21>:
}

ISR(ADC_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	8f 93       	push	r24
	ADCvalue = ADCH; // only need to -read the high value for 8 bit
  d6:	80 91 79 00 	lds	r24, 0x0079
  da:	80 93 00 01 	sts	0x0100, r24
}
  de:	8f 91       	pop	r24
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <timer_init>:

void timer_init (void)
{
	TCCR0A = 1<<COM0A1|1<<COM0A0|1<<WGM00; // PWM mode, set/reset on OCRxA
  ea:	81 ec       	ldi	r24, 0xC1	; 193
  ec:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0<<WGM02 |0<<CS02|0<<CS01|1<<CS00;   // PWM mode with 1 pre scalar
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	85 bd       	out	0x25, r24	; 37
  f2:	08 95       	ret

000000f4 <main>:
int main()
{
	float f;
	float i;
	
	timer_init(); // initialize timer
  f4:	0e 94 75 00 	call	0xea	; 0xea <timer_init>
	adc_init(); // initialize adc
  f8:	0e 94 48 00 	call	0x90	; 0x90 <adc_init>
	sei(); // enable global interrupts
  fc:	78 94       	sei
	
	DDRD = 0xFF; //make PORTB output pin
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0x00;
 102:	17 b8       	out	0x07, r1	; 7
	while(1)
	{
		
		f = (float)ADCvalue * (1.1 / 1024) * .01;
 104:	60 91 00 01 	lds	r22, 0x0100
 108:	70 e0       	ldi	r23, 0x00	; 0
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__floatunsisf>
 112:	2d ec       	ldi	r18, 0xCD	; 205
 114:	3c ec       	ldi	r19, 0xCC	; 204
 116:	4c e8       	ldi	r20, 0x8C	; 140
 118:	5a e3       	ldi	r21, 0x3A	; 58
 11a:	0e 94 3a 01 	call	0x274	; 0x274 <__mulsf3>
 11e:	2a e0       	ldi	r18, 0x0A	; 10
 120:	37 ed       	ldi	r19, 0xD7	; 215
 122:	43 e2       	ldi	r20, 0x23	; 35
 124:	5c e3       	ldi	r21, 0x3C	; 60
 126:	0e 94 3a 01 	call	0x274	; 0x274 <__mulsf3>
		i = f * 1000; // conversion to change duty cycle
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	4a e7       	ldi	r20, 0x7A	; 122
 130:	54 e4       	ldi	r21, 0x44	; 68
 132:	0e 94 3a 01 	call	0x274	; 0x274 <__mulsf3>
		OCR0A = i * 210; // update duty cycle over time
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	42 e5       	ldi	r20, 0x52	; 82
 13c:	53 e4       	ldi	r21, 0x43	; 67
 13e:	0e 94 3a 01 	call	0x274	; 0x274 <__mulsf3>
 142:	0e 94 a5 00 	call	0x14a	; 0x14a <__fixunssfsi>
 146:	67 bd       	out	0x27, r22	; 39
	}
 148:	dd cf       	rjmp	.-70     	; 0x104 <main+0x10>

0000014a <__fixunssfsi>:
 14a:	0e 94 19 01 	call	0x232	; 0x232 <__fp_splitA>
 14e:	88 f0       	brcs	.+34     	; 0x172 <__fixunssfsi+0x28>
 150:	9f 57       	subi	r25, 0x7F	; 127
 152:	98 f0       	brcs	.+38     	; 0x17a <__fixunssfsi+0x30>
 154:	b9 2f       	mov	r27, r25
 156:	99 27       	eor	r25, r25
 158:	b7 51       	subi	r27, 0x17	; 23
 15a:	b0 f0       	brcs	.+44     	; 0x188 <__fixunssfsi+0x3e>
 15c:	e1 f0       	breq	.+56     	; 0x196 <__fixunssfsi+0x4c>
 15e:	66 0f       	add	r22, r22
 160:	77 1f       	adc	r23, r23
 162:	88 1f       	adc	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	1a f0       	brmi	.+6      	; 0x16e <__fixunssfsi+0x24>
 168:	ba 95       	dec	r27
 16a:	c9 f7       	brne	.-14     	; 0x15e <__fixunssfsi+0x14>
 16c:	14 c0       	rjmp	.+40     	; 0x196 <__fixunssfsi+0x4c>
 16e:	b1 30       	cpi	r27, 0x01	; 1
 170:	91 f0       	breq	.+36     	; 0x196 <__fixunssfsi+0x4c>
 172:	0e 94 33 01 	call	0x266	; 0x266 <__fp_zero>
 176:	b1 e0       	ldi	r27, 0x01	; 1
 178:	08 95       	ret
 17a:	0c 94 33 01 	jmp	0x266	; 0x266 <__fp_zero>
 17e:	67 2f       	mov	r22, r23
 180:	78 2f       	mov	r23, r24
 182:	88 27       	eor	r24, r24
 184:	b8 5f       	subi	r27, 0xF8	; 248
 186:	39 f0       	breq	.+14     	; 0x196 <__fixunssfsi+0x4c>
 188:	b9 3f       	cpi	r27, 0xF9	; 249
 18a:	cc f3       	brlt	.-14     	; 0x17e <__fixunssfsi+0x34>
 18c:	86 95       	lsr	r24
 18e:	77 95       	ror	r23
 190:	67 95       	ror	r22
 192:	b3 95       	inc	r27
 194:	d9 f7       	brne	.-10     	; 0x18c <__fixunssfsi+0x42>
 196:	3e f4       	brtc	.+14     	; 0x1a6 <__fixunssfsi+0x5c>
 198:	90 95       	com	r25
 19a:	80 95       	com	r24
 19c:	70 95       	com	r23
 19e:	61 95       	neg	r22
 1a0:	7f 4f       	sbci	r23, 0xFF	; 255
 1a2:	8f 4f       	sbci	r24, 0xFF	; 255
 1a4:	9f 4f       	sbci	r25, 0xFF	; 255
 1a6:	08 95       	ret

000001a8 <__floatunsisf>:
 1a8:	e8 94       	clt
 1aa:	09 c0       	rjmp	.+18     	; 0x1be <__floatsisf+0x12>

000001ac <__floatsisf>:
 1ac:	97 fb       	bst	r25, 7
 1ae:	3e f4       	brtc	.+14     	; 0x1be <__floatsisf+0x12>
 1b0:	90 95       	com	r25
 1b2:	80 95       	com	r24
 1b4:	70 95       	com	r23
 1b6:	61 95       	neg	r22
 1b8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ba:	8f 4f       	sbci	r24, 0xFF	; 255
 1bc:	9f 4f       	sbci	r25, 0xFF	; 255
 1be:	99 23       	and	r25, r25
 1c0:	a9 f0       	breq	.+42     	; 0x1ec <__floatsisf+0x40>
 1c2:	f9 2f       	mov	r31, r25
 1c4:	96 e9       	ldi	r25, 0x96	; 150
 1c6:	bb 27       	eor	r27, r27
 1c8:	93 95       	inc	r25
 1ca:	f6 95       	lsr	r31
 1cc:	87 95       	ror	r24
 1ce:	77 95       	ror	r23
 1d0:	67 95       	ror	r22
 1d2:	b7 95       	ror	r27
 1d4:	f1 11       	cpse	r31, r1
 1d6:	f8 cf       	rjmp	.-16     	; 0x1c8 <__floatsisf+0x1c>
 1d8:	fa f4       	brpl	.+62     	; 0x218 <__floatsisf+0x6c>
 1da:	bb 0f       	add	r27, r27
 1dc:	11 f4       	brne	.+4      	; 0x1e2 <__floatsisf+0x36>
 1de:	60 ff       	sbrs	r22, 0
 1e0:	1b c0       	rjmp	.+54     	; 0x218 <__floatsisf+0x6c>
 1e2:	6f 5f       	subi	r22, 0xFF	; 255
 1e4:	7f 4f       	sbci	r23, 0xFF	; 255
 1e6:	8f 4f       	sbci	r24, 0xFF	; 255
 1e8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ea:	16 c0       	rjmp	.+44     	; 0x218 <__floatsisf+0x6c>
 1ec:	88 23       	and	r24, r24
 1ee:	11 f0       	breq	.+4      	; 0x1f4 <__floatsisf+0x48>
 1f0:	96 e9       	ldi	r25, 0x96	; 150
 1f2:	11 c0       	rjmp	.+34     	; 0x216 <__floatsisf+0x6a>
 1f4:	77 23       	and	r23, r23
 1f6:	21 f0       	breq	.+8      	; 0x200 <__floatsisf+0x54>
 1f8:	9e e8       	ldi	r25, 0x8E	; 142
 1fa:	87 2f       	mov	r24, r23
 1fc:	76 2f       	mov	r23, r22
 1fe:	05 c0       	rjmp	.+10     	; 0x20a <__floatsisf+0x5e>
 200:	66 23       	and	r22, r22
 202:	71 f0       	breq	.+28     	; 0x220 <__floatsisf+0x74>
 204:	96 e8       	ldi	r25, 0x86	; 134
 206:	86 2f       	mov	r24, r22
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	60 e0       	ldi	r22, 0x00	; 0
 20c:	2a f0       	brmi	.+10     	; 0x218 <__floatsisf+0x6c>
 20e:	9a 95       	dec	r25
 210:	66 0f       	add	r22, r22
 212:	77 1f       	adc	r23, r23
 214:	88 1f       	adc	r24, r24
 216:	da f7       	brpl	.-10     	; 0x20e <__floatsisf+0x62>
 218:	88 0f       	add	r24, r24
 21a:	96 95       	lsr	r25
 21c:	87 95       	ror	r24
 21e:	97 f9       	bld	r25, 7
 220:	08 95       	ret

00000222 <__fp_split3>:
 222:	57 fd       	sbrc	r21, 7
 224:	90 58       	subi	r25, 0x80	; 128
 226:	44 0f       	add	r20, r20
 228:	55 1f       	adc	r21, r21
 22a:	59 f0       	breq	.+22     	; 0x242 <__fp_splitA+0x10>
 22c:	5f 3f       	cpi	r21, 0xFF	; 255
 22e:	71 f0       	breq	.+28     	; 0x24c <__fp_splitA+0x1a>
 230:	47 95       	ror	r20

00000232 <__fp_splitA>:
 232:	88 0f       	add	r24, r24
 234:	97 fb       	bst	r25, 7
 236:	99 1f       	adc	r25, r25
 238:	61 f0       	breq	.+24     	; 0x252 <__fp_splitA+0x20>
 23a:	9f 3f       	cpi	r25, 0xFF	; 255
 23c:	79 f0       	breq	.+30     	; 0x25c <__fp_splitA+0x2a>
 23e:	87 95       	ror	r24
 240:	08 95       	ret
 242:	12 16       	cp	r1, r18
 244:	13 06       	cpc	r1, r19
 246:	14 06       	cpc	r1, r20
 248:	55 1f       	adc	r21, r21
 24a:	f2 cf       	rjmp	.-28     	; 0x230 <__fp_split3+0xe>
 24c:	46 95       	lsr	r20
 24e:	f1 df       	rcall	.-30     	; 0x232 <__fp_splitA>
 250:	08 c0       	rjmp	.+16     	; 0x262 <__fp_splitA+0x30>
 252:	16 16       	cp	r1, r22
 254:	17 06       	cpc	r1, r23
 256:	18 06       	cpc	r1, r24
 258:	99 1f       	adc	r25, r25
 25a:	f1 cf       	rjmp	.-30     	; 0x23e <__fp_splitA+0xc>
 25c:	86 95       	lsr	r24
 25e:	71 05       	cpc	r23, r1
 260:	61 05       	cpc	r22, r1
 262:	08 94       	sec
 264:	08 95       	ret

00000266 <__fp_zero>:
 266:	e8 94       	clt

00000268 <__fp_szero>:
 268:	bb 27       	eor	r27, r27
 26a:	66 27       	eor	r22, r22
 26c:	77 27       	eor	r23, r23
 26e:	cb 01       	movw	r24, r22
 270:	97 f9       	bld	r25, 7
 272:	08 95       	ret

00000274 <__mulsf3>:
 274:	0e 94 4d 01 	call	0x29a	; 0x29a <__mulsf3x>
 278:	0c 94 be 01 	jmp	0x37c	; 0x37c <__fp_round>
 27c:	0e 94 b0 01 	call	0x360	; 0x360 <__fp_pscA>
 280:	38 f0       	brcs	.+14     	; 0x290 <__mulsf3+0x1c>
 282:	0e 94 b7 01 	call	0x36e	; 0x36e <__fp_pscB>
 286:	20 f0       	brcs	.+8      	; 0x290 <__mulsf3+0x1c>
 288:	95 23       	and	r25, r21
 28a:	11 f0       	breq	.+4      	; 0x290 <__mulsf3+0x1c>
 28c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_inf>
 290:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__fp_nan>
 294:	11 24       	eor	r1, r1
 296:	0c 94 34 01 	jmp	0x268	; 0x268 <__fp_szero>

0000029a <__mulsf3x>:
 29a:	0e 94 11 01 	call	0x222	; 0x222 <__fp_split3>
 29e:	70 f3       	brcs	.-36     	; 0x27c <__mulsf3+0x8>

000002a0 <__mulsf3_pse>:
 2a0:	95 9f       	mul	r25, r21
 2a2:	c1 f3       	breq	.-16     	; 0x294 <__mulsf3+0x20>
 2a4:	95 0f       	add	r25, r21
 2a6:	50 e0       	ldi	r21, 0x00	; 0
 2a8:	55 1f       	adc	r21, r21
 2aa:	62 9f       	mul	r22, r18
 2ac:	f0 01       	movw	r30, r0
 2ae:	72 9f       	mul	r23, r18
 2b0:	bb 27       	eor	r27, r27
 2b2:	f0 0d       	add	r31, r0
 2b4:	b1 1d       	adc	r27, r1
 2b6:	63 9f       	mul	r22, r19
 2b8:	aa 27       	eor	r26, r26
 2ba:	f0 0d       	add	r31, r0
 2bc:	b1 1d       	adc	r27, r1
 2be:	aa 1f       	adc	r26, r26
 2c0:	64 9f       	mul	r22, r20
 2c2:	66 27       	eor	r22, r22
 2c4:	b0 0d       	add	r27, r0
 2c6:	a1 1d       	adc	r26, r1
 2c8:	66 1f       	adc	r22, r22
 2ca:	82 9f       	mul	r24, r18
 2cc:	22 27       	eor	r18, r18
 2ce:	b0 0d       	add	r27, r0
 2d0:	a1 1d       	adc	r26, r1
 2d2:	62 1f       	adc	r22, r18
 2d4:	73 9f       	mul	r23, r19
 2d6:	b0 0d       	add	r27, r0
 2d8:	a1 1d       	adc	r26, r1
 2da:	62 1f       	adc	r22, r18
 2dc:	83 9f       	mul	r24, r19
 2de:	a0 0d       	add	r26, r0
 2e0:	61 1d       	adc	r22, r1
 2e2:	22 1f       	adc	r18, r18
 2e4:	74 9f       	mul	r23, r20
 2e6:	33 27       	eor	r19, r19
 2e8:	a0 0d       	add	r26, r0
 2ea:	61 1d       	adc	r22, r1
 2ec:	23 1f       	adc	r18, r19
 2ee:	84 9f       	mul	r24, r20
 2f0:	60 0d       	add	r22, r0
 2f2:	21 1d       	adc	r18, r1
 2f4:	82 2f       	mov	r24, r18
 2f6:	76 2f       	mov	r23, r22
 2f8:	6a 2f       	mov	r22, r26
 2fa:	11 24       	eor	r1, r1
 2fc:	9f 57       	subi	r25, 0x7F	; 127
 2fe:	50 40       	sbci	r21, 0x00	; 0
 300:	9a f0       	brmi	.+38     	; 0x328 <__mulsf3_pse+0x88>
 302:	f1 f0       	breq	.+60     	; 0x340 <__mulsf3_pse+0xa0>
 304:	88 23       	and	r24, r24
 306:	4a f0       	brmi	.+18     	; 0x31a <__mulsf3_pse+0x7a>
 308:	ee 0f       	add	r30, r30
 30a:	ff 1f       	adc	r31, r31
 30c:	bb 1f       	adc	r27, r27
 30e:	66 1f       	adc	r22, r22
 310:	77 1f       	adc	r23, r23
 312:	88 1f       	adc	r24, r24
 314:	91 50       	subi	r25, 0x01	; 1
 316:	50 40       	sbci	r21, 0x00	; 0
 318:	a9 f7       	brne	.-22     	; 0x304 <__mulsf3_pse+0x64>
 31a:	9e 3f       	cpi	r25, 0xFE	; 254
 31c:	51 05       	cpc	r21, r1
 31e:	80 f0       	brcs	.+32     	; 0x340 <__mulsf3_pse+0xa0>
 320:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_inf>
 324:	0c 94 34 01 	jmp	0x268	; 0x268 <__fp_szero>
 328:	5f 3f       	cpi	r21, 0xFF	; 255
 32a:	e4 f3       	brlt	.-8      	; 0x324 <__mulsf3_pse+0x84>
 32c:	98 3e       	cpi	r25, 0xE8	; 232
 32e:	d4 f3       	brlt	.-12     	; 0x324 <__mulsf3_pse+0x84>
 330:	86 95       	lsr	r24
 332:	77 95       	ror	r23
 334:	67 95       	ror	r22
 336:	b7 95       	ror	r27
 338:	f7 95       	ror	r31
 33a:	e7 95       	ror	r30
 33c:	9f 5f       	subi	r25, 0xFF	; 255
 33e:	c1 f7       	brne	.-16     	; 0x330 <__mulsf3_pse+0x90>
 340:	fe 2b       	or	r31, r30
 342:	88 0f       	add	r24, r24
 344:	91 1d       	adc	r25, r1
 346:	96 95       	lsr	r25
 348:	87 95       	ror	r24
 34a:	97 f9       	bld	r25, 7
 34c:	08 95       	ret

0000034e <__fp_inf>:
 34e:	97 f9       	bld	r25, 7
 350:	9f 67       	ori	r25, 0x7F	; 127
 352:	80 e8       	ldi	r24, 0x80	; 128
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	08 95       	ret

0000035a <__fp_nan>:
 35a:	9f ef       	ldi	r25, 0xFF	; 255
 35c:	80 ec       	ldi	r24, 0xC0	; 192
 35e:	08 95       	ret

00000360 <__fp_pscA>:
 360:	00 24       	eor	r0, r0
 362:	0a 94       	dec	r0
 364:	16 16       	cp	r1, r22
 366:	17 06       	cpc	r1, r23
 368:	18 06       	cpc	r1, r24
 36a:	09 06       	cpc	r0, r25
 36c:	08 95       	ret

0000036e <__fp_pscB>:
 36e:	00 24       	eor	r0, r0
 370:	0a 94       	dec	r0
 372:	12 16       	cp	r1, r18
 374:	13 06       	cpc	r1, r19
 376:	14 06       	cpc	r1, r20
 378:	05 06       	cpc	r0, r21
 37a:	08 95       	ret

0000037c <__fp_round>:
 37c:	09 2e       	mov	r0, r25
 37e:	03 94       	inc	r0
 380:	00 0c       	add	r0, r0
 382:	11 f4       	brne	.+4      	; 0x388 <__fp_round+0xc>
 384:	88 23       	and	r24, r24
 386:	52 f0       	brmi	.+20     	; 0x39c <__fp_round+0x20>
 388:	bb 0f       	add	r27, r27
 38a:	40 f4       	brcc	.+16     	; 0x39c <__fp_round+0x20>
 38c:	bf 2b       	or	r27, r31
 38e:	11 f4       	brne	.+4      	; 0x394 <__fp_round+0x18>
 390:	60 ff       	sbrs	r22, 0
 392:	04 c0       	rjmp	.+8      	; 0x39c <__fp_round+0x20>
 394:	6f 5f       	subi	r22, 0xFF	; 255
 396:	7f 4f       	sbci	r23, 0xFF	; 255
 398:	8f 4f       	sbci	r24, 0xFF	; 255
 39a:	9f 4f       	sbci	r25, 0xFF	; 255
 39c:	08 95       	ret

0000039e <_exit>:
 39e:	f8 94       	cli

000003a0 <__stop_program>:
 3a0:	ff cf       	rjmp	.-2      	; 0x3a0 <__stop_program>
