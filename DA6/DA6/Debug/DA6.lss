
DA6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000072a  000007be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800110  00800110  000007ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000800  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000513  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000021f  00000000  00000000  00000dab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000020f  00000000  00000000  00000fca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  000011dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000012a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001f4  00000000  00000000  000014a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000169c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 df 00 	jmp	0x1be	; 0x1be <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e2       	ldi	r30, 0x2A	; 42
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 31       	cpi	r26, 0x11	; 17
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ef 00 	call	0x1de	; 0x1de <main>
  9e:	0c 94 93 03 	jmp	0x726	; 0x726 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcdCommanda>:

volatile uint8_t ADCvalue; // Global variable, set to volatile if used withIS

void lcdCommanda (unsigned char cmnd)
{
	LCD_DPRT = cmnd; //send cmnd to data port
  a6:	8b b9       	out	0x0b, r24	; 11
	LCD_CPRT &= ~(1<<LCD_RS); //RS = 0 for command
  a8:	28 98       	cbi	0x05, 0	; 5
	LCD_CPRT &= ~(1<<LCD_RW); //RW = 0 for write
  aa:	29 98       	cbi	0x05, 1	; 5
	LCD_CPRT |= (1<<LCD_EN); //EN = 1 for H-to-L pulse
  ac:	2a 9a       	sbi	0x05, 2	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	8a 95       	dec	r24
  b2:	f1 f7       	brne	.-4      	; 0xb0 <lcdCommanda+0xa>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <lcdCommanda+0x10>
	_delay_us(1); //wait to make enable wide
	LCD_CPRT &= ~(1<<LCD_EN); //EN = 0 for H-to_L pulse
  b6:	2a 98       	cbi	0x05, 2	; 5
  b8:	87 ec       	ldi	r24, 0xC7	; 199
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <lcdCommanda+0x16>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <lcdCommanda+0x1c>
  c2:	00 00       	nop
  c4:	08 95       	ret

000000c6 <lcdData>:
	_delay_us(100); //wait to make enable wide
}

void lcdData(unsigned char data)
{
	LCD_DPRT = data; //send data to data port
  c6:	8b b9       	out	0x0b, r24	; 11
	LCD_CPRT |= (1<<LCD_RS); //RS = 1 for data
  c8:	28 9a       	sbi	0x05, 0	; 5
	LCD_CPRT &= ~(1<<LCD_RW); //RW = 0 for write
  ca:	29 98       	cbi	0x05, 1	; 5
	LCD_CPRT |= (1<<LCD_EN); //EN = 1 for H-to-L pulse
  cc:	2a 9a       	sbi	0x05, 2	; 5
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	8a 95       	dec	r24
  d2:	f1 f7       	brne	.-4      	; 0xd0 <lcdData+0xa>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <lcdData+0x10>
	_delay_us(1); //wait to make enable wide
	LCD_CPRT &= ~(1<<LCD_EN); //EN = 0 for H-to_L pulse
  d6:	2a 98       	cbi	0x05, 2	; 5
  d8:	87 ec       	ldi	r24, 0xC7	; 199
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <lcdData+0x16>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <lcdData+0x1c>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <lcd_init>:
	_delay_us(100); //wait to make enable wide
}

void lcd_init()
{
	LCD_DDDR = 0xFF;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	8a b9       	out	0x0a, r24	; 10
	LCD_CDDR = 0xFF;
  ea:	84 b9       	out	0x04, r24	; 4
	LCD_CPRT &=~(1<<LCD_EN); //LCD_EN = 0
  ec:	2a 98       	cbi	0x05, 2	; 5
  ee:	8f e9       	ldi	r24, 0x9F	; 159
  f0:	9f e0       	ldi	r25, 0x0F	; 15
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <lcd_init+0xc>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <lcd_init+0x12>
  f8:	00 00       	nop
	_delay_us(2000); //wait for init
	lcdCommanda(0x38); //inti. LCD 2 line, 5x7
  fa:	88 e3       	ldi	r24, 0x38	; 56
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommanda>
	lcdCommanda(0x0E); //display on, cursor on
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommanda>
	lcdCommanda(0x01); //clear LCD
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommanda>
 10c:	8f e9       	ldi	r24, 0x9F	; 159
 10e:	9f e0       	ldi	r25, 0x0F	; 15
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <lcd_init+0x2a>
 114:	00 c0       	rjmp	.+0      	; 0x116 <lcd_init+0x30>
 116:	00 00       	nop
	_delay_us(2000); //wait
	lcdCommanda(0x06); //shift cursor right
 118:	86 e0       	ldi	r24, 0x06	; 6
 11a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommanda>
 11e:	08 95       	ret

00000120 <lcd_gotoxy>:
}

void lcd_gotoxy(unsigned char x, unsigned char y)
{
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	00 d0       	rcall	.+0      	; 0x126 <lcd_gotoxy+0x6>
 126:	cd b7       	in	r28, 0x3d	; 61
 128:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[] = {0x80, 0xC0};
 12a:	90 e8       	ldi	r25, 0x80	; 128
 12c:	99 83       	std	Y+1, r25	; 0x01
 12e:	90 ec       	ldi	r25, 0xC0	; 192
 130:	9a 83       	std	Y+2, r25	; 0x02
 132:	81 50       	subi	r24, 0x01	; 1
	lcdCommanda(firstCharAdr[y-1] + x -1);
 134:	fe 01       	movw	r30, r28
 136:	e6 0f       	add	r30, r22
 138:	f1 1d       	adc	r31, r1
 13a:	90 81       	ld	r25, Z
 13c:	89 0f       	add	r24, r25
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommanda>
 142:	87 ec       	ldi	r24, 0xC7	; 199
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <lcd_gotoxy+0x26>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <lcd_gotoxy+0x2c>
 14c:	00 00       	nop
	_delay_us(100);
}
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	08 95       	ret

00000158 <lcd_print>:

void lcd_print(char * str)
{
 158:	0f 93       	push	r16
 15a:	1f 93       	push	r17
 15c:	cf 93       	push	r28
 15e:	fc 01       	movw	r30, r24
	unsigned char i = 0;
	while (str[i]!=0)
 160:	80 81       	ld	r24, Z
 162:	88 23       	and	r24, r24
 164:	59 f0       	breq	.+22     	; 0x17c <lcd_print+0x24>
 166:	8f 01       	movw	r16, r30
 168:	c0 e0       	ldi	r28, 0x00	; 0
	{
		lcdData(str[i]);
 16a:	0e 94 63 00 	call	0xc6	; 0xc6 <lcdData>
		i++;
 16e:	cf 5f       	subi	r28, 0xFF	; 255
}

void lcd_print(char * str)
{
	unsigned char i = 0;
	while (str[i]!=0)
 170:	f8 01       	movw	r30, r16
 172:	ec 0f       	add	r30, r28
 174:	f1 1d       	adc	r31, r1
 176:	80 81       	ld	r24, Z
 178:	81 11       	cpse	r24, r1
 17a:	f7 cf       	rjmp	.-18     	; 0x16a <lcd_print+0x12>
	{
		lcdData(str[i]);
		i++;
	}
}
 17c:	cf 91       	pop	r28
 17e:	1f 91       	pop	r17
 180:	0f 91       	pop	r16
 182:	08 95       	ret

00000184 <adc_init>:

void adc_init (void)
{
	ADMUX = 0; // use ADC0
 184:	ec e7       	ldi	r30, 0x7C	; 124
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0) | (1 <<REFS1); // use AVcc as the reference
 18a:	80 81       	ld	r24, Z
 18c:	80 6c       	ori	r24, 0xC0	; 192
 18e:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR); // Right adjust for 8 bit resolution
 190:	80 81       	ld	r24, Z
 192:	80 62       	ori	r24, 0x20	; 32
 194:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (0 << ADPS0); // 64 prescale for 8Mhz
 196:	ea e7       	ldi	r30, 0x7A	; 122
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	86 60       	ori	r24, 0x06	; 6
 19e:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE); // Set ADC Auto Trigger Enable
 1a0:	80 81       	ld	r24, Z
 1a2:	80 62       	ori	r24, 0x20	; 32
 1a4:	80 83       	st	Z, r24
	ADCSRB = 0; // 0 for free running mode
 1a6:	10 92 7b 00 	sts	0x007B, r1
	ADCSRA |= (1 << ADEN); // Enable the ADC
 1aa:	80 81       	ld	r24, Z
 1ac:	80 68       	ori	r24, 0x80	; 128
 1ae:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE); // Enable Interrupts
 1b0:	80 81       	ld	r24, Z
 1b2:	88 60       	ori	r24, 0x08	; 8
 1b4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // Start the ADC conversion
 1b6:	80 81       	ld	r24, Z
 1b8:	80 64       	ori	r24, 0x40	; 64
 1ba:	80 83       	st	Z, r24
 1bc:	08 95       	ret

000001be <__vector_21>:
}

ISR(ADC_vect)
{
 1be:	1f 92       	push	r1
 1c0:	0f 92       	push	r0
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	0f 92       	push	r0
 1c6:	11 24       	eor	r1, r1
 1c8:	8f 93       	push	r24
	ADCvalue = ADCH; // only need to -read the high value for 8 bit
 1ca:	80 91 79 00 	lds	r24, 0x0079
 1ce:	80 93 10 01 	sts	0x0110, r24
}
 1d2:	8f 91       	pop	r24
 1d4:	0f 90       	pop	r0
 1d6:	0f be       	out	0x3f, r0	; 63
 1d8:	0f 90       	pop	r0
 1da:	1f 90       	pop	r1
 1dc:	18 95       	reti

000001de <main>:
int main(void)
{
	float temp; // used to get temperate as float
	char* s = "   . F"; // string to be printed
	
	adc_init (); // initialize adc
 1de:	0e 94 c2 00 	call	0x184	; 0x184 <adc_init>
	sei(); // enable interrupts
 1e2:	78 94       	sei
	lcd_init(); // initialize lcd
 1e4:	0e 94 73 00 	call	0xe6	; 0xe6 <lcd_init>
	while(1)
	{
		temp = ADCvalue * (1.1 / 1024) / .01; // adc conversion
		temp = temp * 1.8 + 32; // convert from C to F
		s[1] = temp / 10 + '0'; // tens place
 1e8:	c0 e0       	ldi	r28, 0x00	; 0
 1ea:	d1 e0       	ldi	r29, 0x01	; 1
		s[2] = (int)temp % 10 + '0'; // ones place
 1ec:	0a e0       	ldi	r16, 0x0A	; 10
 1ee:	10 e0       	ldi	r17, 0x00	; 0
	adc_init (); // initialize adc
	sei(); // enable interrupts
	lcd_init(); // initialize lcd
	while(1)
	{
		temp = ADCvalue * (1.1 / 1024) / .01; // adc conversion
 1f0:	60 91 10 01 	lds	r22, 0x0110
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 72 02 	call	0x4e4	; 0x4e4 <__floatsisf>
 1fe:	2d ec       	ldi	r18, 0xCD	; 205
 200:	3c ec       	ldi	r19, 0xCC	; 204
 202:	4c e8       	ldi	r20, 0x8C	; 140
 204:	5a e3       	ldi	r21, 0x3A	; 58
 206:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__mulsf3>
 20a:	2a e0       	ldi	r18, 0x0A	; 10
 20c:	37 ed       	ldi	r19, 0xD7	; 215
 20e:	43 e2       	ldi	r20, 0x23	; 35
 210:	5c e3       	ldi	r21, 0x3C	; 60
 212:	0e 94 c8 01 	call	0x390	; 0x390 <__divsf3>
		temp = temp * 1.8 + 32; // convert from C to F
 216:	26 e6       	ldi	r18, 0x66	; 102
 218:	36 e6       	ldi	r19, 0x66	; 102
 21a:	46 ee       	ldi	r20, 0xE6	; 230
 21c:	5f e3       	ldi	r21, 0x3F	; 63
 21e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__mulsf3>
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	40 e0       	ldi	r20, 0x00	; 0
 228:	52 e4       	ldi	r21, 0x42	; 66
 22a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__addsf3>
 22e:	6b 01       	movw	r12, r22
 230:	7c 01       	movw	r14, r24
		s[1] = temp / 10 + '0'; // tens place
 232:	20 e0       	ldi	r18, 0x00	; 0
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	40 e2       	ldi	r20, 0x20	; 32
 238:	51 e4       	ldi	r21, 0x41	; 65
 23a:	0e 94 c8 01 	call	0x390	; 0x390 <__divsf3>
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	40 e4       	ldi	r20, 0x40	; 64
 244:	52 e4       	ldi	r21, 0x42	; 66
 246:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__addsf3>
 24a:	0e 94 41 02 	call	0x482	; 0x482 <__fixunssfsi>
 24e:	69 83       	std	Y+1, r22	; 0x01
		s[2] = (int)temp % 10 + '0'; // ones place
 250:	c7 01       	movw	r24, r14
 252:	b6 01       	movw	r22, r12
 254:	0e 94 3a 02 	call	0x474	; 0x474 <__fixsfsi>
 258:	cb 01       	movw	r24, r22
 25a:	b8 01       	movw	r22, r16
 25c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__divmodhi4>
 260:	80 5d       	subi	r24, 0xD0	; 208
 262:	8a 83       	std	Y+2, r24	; 0x02
		s[4] = (int)(temp * 10) % 10 + '0'; // tenths place
 264:	20 e0       	ldi	r18, 0x00	; 0
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	40 e2       	ldi	r20, 0x20	; 32
 26a:	51 e4       	ldi	r21, 0x41	; 65
 26c:	c7 01       	movw	r24, r14
 26e:	b6 01       	movw	r22, r12
 270:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__mulsf3>
 274:	0e 94 3a 02 	call	0x474	; 0x474 <__fixsfsi>
 278:	cb 01       	movw	r24, r22
 27a:	b8 01       	movw	r22, r16
 27c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__divmodhi4>
 280:	80 5d       	subi	r24, 0xD0	; 208
 282:	8c 83       	std	Y+4, r24	; 0x04
		lcd_gotoxy(1,1); // set cursor position to beginning 
 284:	61 e0       	ldi	r22, 0x01	; 1
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	0e 94 90 00 	call	0x120	; 0x120 <lcd_gotoxy>
		lcd_print("Temp is:"); // print label
 28c:	87 e0       	ldi	r24, 0x07	; 7
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_print>
		lcd_gotoxy(1,2); // set cursor to middle of lcd
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	0e 94 90 00 	call	0x120	; 0x120 <lcd_gotoxy>
		lcd_print(s); // print string
 29c:	ce 01       	movw	r24, r28
 29e:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	84 e3       	ldi	r24, 0x34	; 52
 2a6:	9c e0       	ldi	r25, 0x0C	; 12
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	80 40       	sbci	r24, 0x00	; 0
 2ac:	90 40       	sbci	r25, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0xca>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0xd4>
 2b2:	00 00       	nop
 2b4:	9d cf       	rjmp	.-198    	; 0x1f0 <main+0x12>

000002b6 <__subsf3>:
 2b6:	50 58       	subi	r21, 0x80	; 128

000002b8 <__addsf3>:
 2b8:	bb 27       	eor	r27, r27
 2ba:	aa 27       	eor	r26, r26
 2bc:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__addsf3x>
 2c0:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_round>
 2c4:	0e 94 b6 02 	call	0x56c	; 0x56c <__fp_pscA>
 2c8:	38 f0       	brcs	.+14     	; 0x2d8 <__addsf3+0x20>
 2ca:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscB>
 2ce:	20 f0       	brcs	.+8      	; 0x2d8 <__addsf3+0x20>
 2d0:	39 f4       	brne	.+14     	; 0x2e0 <__addsf3+0x28>
 2d2:	9f 3f       	cpi	r25, 0xFF	; 255
 2d4:	19 f4       	brne	.+6      	; 0x2dc <__addsf3+0x24>
 2d6:	26 f4       	brtc	.+8      	; 0x2e0 <__addsf3+0x28>
 2d8:	0c 94 b3 02 	jmp	0x566	; 0x566 <__fp_nan>
 2dc:	0e f4       	brtc	.+2      	; 0x2e0 <__addsf3+0x28>
 2de:	e0 95       	com	r30
 2e0:	e7 fb       	bst	r30, 7
 2e2:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_inf>

000002e6 <__addsf3x>:
 2e6:	e9 2f       	mov	r30, r25
 2e8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fp_split3>
 2ec:	58 f3       	brcs	.-42     	; 0x2c4 <__addsf3+0xc>
 2ee:	ba 17       	cp	r27, r26
 2f0:	62 07       	cpc	r22, r18
 2f2:	73 07       	cpc	r23, r19
 2f4:	84 07       	cpc	r24, r20
 2f6:	95 07       	cpc	r25, r21
 2f8:	20 f0       	brcs	.+8      	; 0x302 <__addsf3x+0x1c>
 2fa:	79 f4       	brne	.+30     	; 0x31a <__addsf3x+0x34>
 2fc:	a6 f5       	brtc	.+104    	; 0x366 <__addsf3x+0x80>
 2fe:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_zero>
 302:	0e f4       	brtc	.+2      	; 0x306 <__addsf3x+0x20>
 304:	e0 95       	com	r30
 306:	0b 2e       	mov	r0, r27
 308:	ba 2f       	mov	r27, r26
 30a:	a0 2d       	mov	r26, r0
 30c:	0b 01       	movw	r0, r22
 30e:	b9 01       	movw	r22, r18
 310:	90 01       	movw	r18, r0
 312:	0c 01       	movw	r0, r24
 314:	ca 01       	movw	r24, r20
 316:	a0 01       	movw	r20, r0
 318:	11 24       	eor	r1, r1
 31a:	ff 27       	eor	r31, r31
 31c:	59 1b       	sub	r21, r25
 31e:	99 f0       	breq	.+38     	; 0x346 <__addsf3x+0x60>
 320:	59 3f       	cpi	r21, 0xF9	; 249
 322:	50 f4       	brcc	.+20     	; 0x338 <__addsf3x+0x52>
 324:	50 3e       	cpi	r21, 0xE0	; 224
 326:	68 f1       	brcs	.+90     	; 0x382 <__addsf3x+0x9c>
 328:	1a 16       	cp	r1, r26
 32a:	f0 40       	sbci	r31, 0x00	; 0
 32c:	a2 2f       	mov	r26, r18
 32e:	23 2f       	mov	r18, r19
 330:	34 2f       	mov	r19, r20
 332:	44 27       	eor	r20, r20
 334:	58 5f       	subi	r21, 0xF8	; 248
 336:	f3 cf       	rjmp	.-26     	; 0x31e <__addsf3x+0x38>
 338:	46 95       	lsr	r20
 33a:	37 95       	ror	r19
 33c:	27 95       	ror	r18
 33e:	a7 95       	ror	r26
 340:	f0 40       	sbci	r31, 0x00	; 0
 342:	53 95       	inc	r21
 344:	c9 f7       	brne	.-14     	; 0x338 <__addsf3x+0x52>
 346:	7e f4       	brtc	.+30     	; 0x366 <__addsf3x+0x80>
 348:	1f 16       	cp	r1, r31
 34a:	ba 0b       	sbc	r27, r26
 34c:	62 0b       	sbc	r22, r18
 34e:	73 0b       	sbc	r23, r19
 350:	84 0b       	sbc	r24, r20
 352:	ba f0       	brmi	.+46     	; 0x382 <__addsf3x+0x9c>
 354:	91 50       	subi	r25, 0x01	; 1
 356:	a1 f0       	breq	.+40     	; 0x380 <__addsf3x+0x9a>
 358:	ff 0f       	add	r31, r31
 35a:	bb 1f       	adc	r27, r27
 35c:	66 1f       	adc	r22, r22
 35e:	77 1f       	adc	r23, r23
 360:	88 1f       	adc	r24, r24
 362:	c2 f7       	brpl	.-16     	; 0x354 <__addsf3x+0x6e>
 364:	0e c0       	rjmp	.+28     	; 0x382 <__addsf3x+0x9c>
 366:	ba 0f       	add	r27, r26
 368:	62 1f       	adc	r22, r18
 36a:	73 1f       	adc	r23, r19
 36c:	84 1f       	adc	r24, r20
 36e:	48 f4       	brcc	.+18     	; 0x382 <__addsf3x+0x9c>
 370:	87 95       	ror	r24
 372:	77 95       	ror	r23
 374:	67 95       	ror	r22
 376:	b7 95       	ror	r27
 378:	f7 95       	ror	r31
 37a:	9e 3f       	cpi	r25, 0xFE	; 254
 37c:	08 f0       	brcs	.+2      	; 0x380 <__addsf3x+0x9a>
 37e:	b0 cf       	rjmp	.-160    	; 0x2e0 <__addsf3+0x28>
 380:	93 95       	inc	r25
 382:	88 0f       	add	r24, r24
 384:	08 f0       	brcs	.+2      	; 0x388 <__addsf3x+0xa2>
 386:	99 27       	eor	r25, r25
 388:	ee 0f       	add	r30, r30
 38a:	97 95       	ror	r25
 38c:	87 95       	ror	r24
 38e:	08 95       	ret

00000390 <__divsf3>:
 390:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__divsf3x>
 394:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_round>
 398:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscB>
 39c:	58 f0       	brcs	.+22     	; 0x3b4 <__divsf3+0x24>
 39e:	0e 94 b6 02 	call	0x56c	; 0x56c <__fp_pscA>
 3a2:	40 f0       	brcs	.+16     	; 0x3b4 <__divsf3+0x24>
 3a4:	29 f4       	brne	.+10     	; 0x3b0 <__divsf3+0x20>
 3a6:	5f 3f       	cpi	r21, 0xFF	; 255
 3a8:	29 f0       	breq	.+10     	; 0x3b4 <__divsf3+0x24>
 3aa:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_inf>
 3ae:	51 11       	cpse	r21, r1
 3b0:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <__fp_szero>
 3b4:	0c 94 b3 02 	jmp	0x566	; 0x566 <__fp_nan>

000003b8 <__divsf3x>:
 3b8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fp_split3>
 3bc:	68 f3       	brcs	.-38     	; 0x398 <__divsf3+0x8>

000003be <__divsf3_pse>:
 3be:	99 23       	and	r25, r25
 3c0:	b1 f3       	breq	.-20     	; 0x3ae <__divsf3+0x1e>
 3c2:	55 23       	and	r21, r21
 3c4:	91 f3       	breq	.-28     	; 0x3aa <__divsf3+0x1a>
 3c6:	95 1b       	sub	r25, r21
 3c8:	55 0b       	sbc	r21, r21
 3ca:	bb 27       	eor	r27, r27
 3cc:	aa 27       	eor	r26, r26
 3ce:	62 17       	cp	r22, r18
 3d0:	73 07       	cpc	r23, r19
 3d2:	84 07       	cpc	r24, r20
 3d4:	38 f0       	brcs	.+14     	; 0x3e4 <__divsf3_pse+0x26>
 3d6:	9f 5f       	subi	r25, 0xFF	; 255
 3d8:	5f 4f       	sbci	r21, 0xFF	; 255
 3da:	22 0f       	add	r18, r18
 3dc:	33 1f       	adc	r19, r19
 3de:	44 1f       	adc	r20, r20
 3e0:	aa 1f       	adc	r26, r26
 3e2:	a9 f3       	breq	.-22     	; 0x3ce <__divsf3_pse+0x10>
 3e4:	35 d0       	rcall	.+106    	; 0x450 <__divsf3_pse+0x92>
 3e6:	0e 2e       	mov	r0, r30
 3e8:	3a f0       	brmi	.+14     	; 0x3f8 <__divsf3_pse+0x3a>
 3ea:	e0 e8       	ldi	r30, 0x80	; 128
 3ec:	32 d0       	rcall	.+100    	; 0x452 <__divsf3_pse+0x94>
 3ee:	91 50       	subi	r25, 0x01	; 1
 3f0:	50 40       	sbci	r21, 0x00	; 0
 3f2:	e6 95       	lsr	r30
 3f4:	00 1c       	adc	r0, r0
 3f6:	ca f7       	brpl	.-14     	; 0x3ea <__divsf3_pse+0x2c>
 3f8:	2b d0       	rcall	.+86     	; 0x450 <__divsf3_pse+0x92>
 3fa:	fe 2f       	mov	r31, r30
 3fc:	29 d0       	rcall	.+82     	; 0x450 <__divsf3_pse+0x92>
 3fe:	66 0f       	add	r22, r22
 400:	77 1f       	adc	r23, r23
 402:	88 1f       	adc	r24, r24
 404:	bb 1f       	adc	r27, r27
 406:	26 17       	cp	r18, r22
 408:	37 07       	cpc	r19, r23
 40a:	48 07       	cpc	r20, r24
 40c:	ab 07       	cpc	r26, r27
 40e:	b0 e8       	ldi	r27, 0x80	; 128
 410:	09 f0       	breq	.+2      	; 0x414 <__divsf3_pse+0x56>
 412:	bb 0b       	sbc	r27, r27
 414:	80 2d       	mov	r24, r0
 416:	bf 01       	movw	r22, r30
 418:	ff 27       	eor	r31, r31
 41a:	93 58       	subi	r25, 0x83	; 131
 41c:	5f 4f       	sbci	r21, 0xFF	; 255
 41e:	3a f0       	brmi	.+14     	; 0x42e <__divsf3_pse+0x70>
 420:	9e 3f       	cpi	r25, 0xFE	; 254
 422:	51 05       	cpc	r21, r1
 424:	78 f0       	brcs	.+30     	; 0x444 <__divsf3_pse+0x86>
 426:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_inf>
 42a:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <__fp_szero>
 42e:	5f 3f       	cpi	r21, 0xFF	; 255
 430:	e4 f3       	brlt	.-8      	; 0x42a <__divsf3_pse+0x6c>
 432:	98 3e       	cpi	r25, 0xE8	; 232
 434:	d4 f3       	brlt	.-12     	; 0x42a <__divsf3_pse+0x6c>
 436:	86 95       	lsr	r24
 438:	77 95       	ror	r23
 43a:	67 95       	ror	r22
 43c:	b7 95       	ror	r27
 43e:	f7 95       	ror	r31
 440:	9f 5f       	subi	r25, 0xFF	; 255
 442:	c9 f7       	brne	.-14     	; 0x436 <__divsf3_pse+0x78>
 444:	88 0f       	add	r24, r24
 446:	91 1d       	adc	r25, r1
 448:	96 95       	lsr	r25
 44a:	87 95       	ror	r24
 44c:	97 f9       	bld	r25, 7
 44e:	08 95       	ret
 450:	e1 e0       	ldi	r30, 0x01	; 1
 452:	66 0f       	add	r22, r22
 454:	77 1f       	adc	r23, r23
 456:	88 1f       	adc	r24, r24
 458:	bb 1f       	adc	r27, r27
 45a:	62 17       	cp	r22, r18
 45c:	73 07       	cpc	r23, r19
 45e:	84 07       	cpc	r24, r20
 460:	ba 07       	cpc	r27, r26
 462:	20 f0       	brcs	.+8      	; 0x46c <__divsf3_pse+0xae>
 464:	62 1b       	sub	r22, r18
 466:	73 0b       	sbc	r23, r19
 468:	84 0b       	sbc	r24, r20
 46a:	ba 0b       	sbc	r27, r26
 46c:	ee 1f       	adc	r30, r30
 46e:	88 f7       	brcc	.-30     	; 0x452 <__divsf3_pse+0x94>
 470:	e0 95       	com	r30
 472:	08 95       	ret

00000474 <__fixsfsi>:
 474:	0e 94 41 02 	call	0x482	; 0x482 <__fixunssfsi>
 478:	68 94       	set
 47a:	b1 11       	cpse	r27, r1
 47c:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <__fp_szero>
 480:	08 95       	ret

00000482 <__fixunssfsi>:
 482:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__fp_splitA>
 486:	88 f0       	brcs	.+34     	; 0x4aa <__fixunssfsi+0x28>
 488:	9f 57       	subi	r25, 0x7F	; 127
 48a:	98 f0       	brcs	.+38     	; 0x4b2 <__fixunssfsi+0x30>
 48c:	b9 2f       	mov	r27, r25
 48e:	99 27       	eor	r25, r25
 490:	b7 51       	subi	r27, 0x17	; 23
 492:	b0 f0       	brcs	.+44     	; 0x4c0 <__fixunssfsi+0x3e>
 494:	e1 f0       	breq	.+56     	; 0x4ce <__fixunssfsi+0x4c>
 496:	66 0f       	add	r22, r22
 498:	77 1f       	adc	r23, r23
 49a:	88 1f       	adc	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	1a f0       	brmi	.+6      	; 0x4a6 <__fixunssfsi+0x24>
 4a0:	ba 95       	dec	r27
 4a2:	c9 f7       	brne	.-14     	; 0x496 <__fixunssfsi+0x14>
 4a4:	14 c0       	rjmp	.+40     	; 0x4ce <__fixunssfsi+0x4c>
 4a6:	b1 30       	cpi	r27, 0x01	; 1
 4a8:	91 f0       	breq	.+36     	; 0x4ce <__fixunssfsi+0x4c>
 4aa:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_zero>
 4ae:	b1 e0       	ldi	r27, 0x01	; 1
 4b0:	08 95       	ret
 4b2:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_zero>
 4b6:	67 2f       	mov	r22, r23
 4b8:	78 2f       	mov	r23, r24
 4ba:	88 27       	eor	r24, r24
 4bc:	b8 5f       	subi	r27, 0xF8	; 248
 4be:	39 f0       	breq	.+14     	; 0x4ce <__fixunssfsi+0x4c>
 4c0:	b9 3f       	cpi	r27, 0xF9	; 249
 4c2:	cc f3       	brlt	.-14     	; 0x4b6 <__fixunssfsi+0x34>
 4c4:	86 95       	lsr	r24
 4c6:	77 95       	ror	r23
 4c8:	67 95       	ror	r22
 4ca:	b3 95       	inc	r27
 4cc:	d9 f7       	brne	.-10     	; 0x4c4 <__fixunssfsi+0x42>
 4ce:	3e f4       	brtc	.+14     	; 0x4de <__fixunssfsi+0x5c>
 4d0:	90 95       	com	r25
 4d2:	80 95       	com	r24
 4d4:	70 95       	com	r23
 4d6:	61 95       	neg	r22
 4d8:	7f 4f       	sbci	r23, 0xFF	; 255
 4da:	8f 4f       	sbci	r24, 0xFF	; 255
 4dc:	9f 4f       	sbci	r25, 0xFF	; 255
 4de:	08 95       	ret

000004e0 <__floatunsisf>:
 4e0:	e8 94       	clt
 4e2:	09 c0       	rjmp	.+18     	; 0x4f6 <__floatsisf+0x12>

000004e4 <__floatsisf>:
 4e4:	97 fb       	bst	r25, 7
 4e6:	3e f4       	brtc	.+14     	; 0x4f6 <__floatsisf+0x12>
 4e8:	90 95       	com	r25
 4ea:	80 95       	com	r24
 4ec:	70 95       	com	r23
 4ee:	61 95       	neg	r22
 4f0:	7f 4f       	sbci	r23, 0xFF	; 255
 4f2:	8f 4f       	sbci	r24, 0xFF	; 255
 4f4:	9f 4f       	sbci	r25, 0xFF	; 255
 4f6:	99 23       	and	r25, r25
 4f8:	a9 f0       	breq	.+42     	; 0x524 <__floatsisf+0x40>
 4fa:	f9 2f       	mov	r31, r25
 4fc:	96 e9       	ldi	r25, 0x96	; 150
 4fe:	bb 27       	eor	r27, r27
 500:	93 95       	inc	r25
 502:	f6 95       	lsr	r31
 504:	87 95       	ror	r24
 506:	77 95       	ror	r23
 508:	67 95       	ror	r22
 50a:	b7 95       	ror	r27
 50c:	f1 11       	cpse	r31, r1
 50e:	f8 cf       	rjmp	.-16     	; 0x500 <__floatsisf+0x1c>
 510:	fa f4       	brpl	.+62     	; 0x550 <__floatsisf+0x6c>
 512:	bb 0f       	add	r27, r27
 514:	11 f4       	brne	.+4      	; 0x51a <__floatsisf+0x36>
 516:	60 ff       	sbrs	r22, 0
 518:	1b c0       	rjmp	.+54     	; 0x550 <__floatsisf+0x6c>
 51a:	6f 5f       	subi	r22, 0xFF	; 255
 51c:	7f 4f       	sbci	r23, 0xFF	; 255
 51e:	8f 4f       	sbci	r24, 0xFF	; 255
 520:	9f 4f       	sbci	r25, 0xFF	; 255
 522:	16 c0       	rjmp	.+44     	; 0x550 <__floatsisf+0x6c>
 524:	88 23       	and	r24, r24
 526:	11 f0       	breq	.+4      	; 0x52c <__floatsisf+0x48>
 528:	96 e9       	ldi	r25, 0x96	; 150
 52a:	11 c0       	rjmp	.+34     	; 0x54e <__floatsisf+0x6a>
 52c:	77 23       	and	r23, r23
 52e:	21 f0       	breq	.+8      	; 0x538 <__floatsisf+0x54>
 530:	9e e8       	ldi	r25, 0x8E	; 142
 532:	87 2f       	mov	r24, r23
 534:	76 2f       	mov	r23, r22
 536:	05 c0       	rjmp	.+10     	; 0x542 <__floatsisf+0x5e>
 538:	66 23       	and	r22, r22
 53a:	71 f0       	breq	.+28     	; 0x558 <__floatsisf+0x74>
 53c:	96 e8       	ldi	r25, 0x86	; 134
 53e:	86 2f       	mov	r24, r22
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	60 e0       	ldi	r22, 0x00	; 0
 544:	2a f0       	brmi	.+10     	; 0x550 <__floatsisf+0x6c>
 546:	9a 95       	dec	r25
 548:	66 0f       	add	r22, r22
 54a:	77 1f       	adc	r23, r23
 54c:	88 1f       	adc	r24, r24
 54e:	da f7       	brpl	.-10     	; 0x546 <__floatsisf+0x62>
 550:	88 0f       	add	r24, r24
 552:	96 95       	lsr	r25
 554:	87 95       	ror	r24
 556:	97 f9       	bld	r25, 7
 558:	08 95       	ret

0000055a <__fp_inf>:
 55a:	97 f9       	bld	r25, 7
 55c:	9f 67       	ori	r25, 0x7F	; 127
 55e:	80 e8       	ldi	r24, 0x80	; 128
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	60 e0       	ldi	r22, 0x00	; 0
 564:	08 95       	ret

00000566 <__fp_nan>:
 566:	9f ef       	ldi	r25, 0xFF	; 255
 568:	80 ec       	ldi	r24, 0xC0	; 192
 56a:	08 95       	ret

0000056c <__fp_pscA>:
 56c:	00 24       	eor	r0, r0
 56e:	0a 94       	dec	r0
 570:	16 16       	cp	r1, r22
 572:	17 06       	cpc	r1, r23
 574:	18 06       	cpc	r1, r24
 576:	09 06       	cpc	r0, r25
 578:	08 95       	ret

0000057a <__fp_pscB>:
 57a:	00 24       	eor	r0, r0
 57c:	0a 94       	dec	r0
 57e:	12 16       	cp	r1, r18
 580:	13 06       	cpc	r1, r19
 582:	14 06       	cpc	r1, r20
 584:	05 06       	cpc	r0, r21
 586:	08 95       	ret

00000588 <__fp_round>:
 588:	09 2e       	mov	r0, r25
 58a:	03 94       	inc	r0
 58c:	00 0c       	add	r0, r0
 58e:	11 f4       	brne	.+4      	; 0x594 <__fp_round+0xc>
 590:	88 23       	and	r24, r24
 592:	52 f0       	brmi	.+20     	; 0x5a8 <__fp_round+0x20>
 594:	bb 0f       	add	r27, r27
 596:	40 f4       	brcc	.+16     	; 0x5a8 <__fp_round+0x20>
 598:	bf 2b       	or	r27, r31
 59a:	11 f4       	brne	.+4      	; 0x5a0 <__fp_round+0x18>
 59c:	60 ff       	sbrs	r22, 0
 59e:	04 c0       	rjmp	.+8      	; 0x5a8 <__fp_round+0x20>
 5a0:	6f 5f       	subi	r22, 0xFF	; 255
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255
 5a4:	8f 4f       	sbci	r24, 0xFF	; 255
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	08 95       	ret

000005aa <__fp_split3>:
 5aa:	57 fd       	sbrc	r21, 7
 5ac:	90 58       	subi	r25, 0x80	; 128
 5ae:	44 0f       	add	r20, r20
 5b0:	55 1f       	adc	r21, r21
 5b2:	59 f0       	breq	.+22     	; 0x5ca <__fp_splitA+0x10>
 5b4:	5f 3f       	cpi	r21, 0xFF	; 255
 5b6:	71 f0       	breq	.+28     	; 0x5d4 <__fp_splitA+0x1a>
 5b8:	47 95       	ror	r20

000005ba <__fp_splitA>:
 5ba:	88 0f       	add	r24, r24
 5bc:	97 fb       	bst	r25, 7
 5be:	99 1f       	adc	r25, r25
 5c0:	61 f0       	breq	.+24     	; 0x5da <__fp_splitA+0x20>
 5c2:	9f 3f       	cpi	r25, 0xFF	; 255
 5c4:	79 f0       	breq	.+30     	; 0x5e4 <__fp_splitA+0x2a>
 5c6:	87 95       	ror	r24
 5c8:	08 95       	ret
 5ca:	12 16       	cp	r1, r18
 5cc:	13 06       	cpc	r1, r19
 5ce:	14 06       	cpc	r1, r20
 5d0:	55 1f       	adc	r21, r21
 5d2:	f2 cf       	rjmp	.-28     	; 0x5b8 <__fp_split3+0xe>
 5d4:	46 95       	lsr	r20
 5d6:	f1 df       	rcall	.-30     	; 0x5ba <__fp_splitA>
 5d8:	08 c0       	rjmp	.+16     	; 0x5ea <__fp_splitA+0x30>
 5da:	16 16       	cp	r1, r22
 5dc:	17 06       	cpc	r1, r23
 5de:	18 06       	cpc	r1, r24
 5e0:	99 1f       	adc	r25, r25
 5e2:	f1 cf       	rjmp	.-30     	; 0x5c6 <__fp_splitA+0xc>
 5e4:	86 95       	lsr	r24
 5e6:	71 05       	cpc	r23, r1
 5e8:	61 05       	cpc	r22, r1
 5ea:	08 94       	sec
 5ec:	08 95       	ret

000005ee <__fp_zero>:
 5ee:	e8 94       	clt

000005f0 <__fp_szero>:
 5f0:	bb 27       	eor	r27, r27
 5f2:	66 27       	eor	r22, r22
 5f4:	77 27       	eor	r23, r23
 5f6:	cb 01       	movw	r24, r22
 5f8:	97 f9       	bld	r25, 7
 5fa:	08 95       	ret

000005fc <__mulsf3>:
 5fc:	0e 94 11 03 	call	0x622	; 0x622 <__mulsf3x>
 600:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_round>
 604:	0e 94 b6 02 	call	0x56c	; 0x56c <__fp_pscA>
 608:	38 f0       	brcs	.+14     	; 0x618 <__mulsf3+0x1c>
 60a:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscB>
 60e:	20 f0       	brcs	.+8      	; 0x618 <__mulsf3+0x1c>
 610:	95 23       	and	r25, r21
 612:	11 f0       	breq	.+4      	; 0x618 <__mulsf3+0x1c>
 614:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_inf>
 618:	0c 94 b3 02 	jmp	0x566	; 0x566 <__fp_nan>
 61c:	11 24       	eor	r1, r1
 61e:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <__fp_szero>

00000622 <__mulsf3x>:
 622:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fp_split3>
 626:	70 f3       	brcs	.-36     	; 0x604 <__mulsf3+0x8>

00000628 <__mulsf3_pse>:
 628:	95 9f       	mul	r25, r21
 62a:	c1 f3       	breq	.-16     	; 0x61c <__mulsf3+0x20>
 62c:	95 0f       	add	r25, r21
 62e:	50 e0       	ldi	r21, 0x00	; 0
 630:	55 1f       	adc	r21, r21
 632:	62 9f       	mul	r22, r18
 634:	f0 01       	movw	r30, r0
 636:	72 9f       	mul	r23, r18
 638:	bb 27       	eor	r27, r27
 63a:	f0 0d       	add	r31, r0
 63c:	b1 1d       	adc	r27, r1
 63e:	63 9f       	mul	r22, r19
 640:	aa 27       	eor	r26, r26
 642:	f0 0d       	add	r31, r0
 644:	b1 1d       	adc	r27, r1
 646:	aa 1f       	adc	r26, r26
 648:	64 9f       	mul	r22, r20
 64a:	66 27       	eor	r22, r22
 64c:	b0 0d       	add	r27, r0
 64e:	a1 1d       	adc	r26, r1
 650:	66 1f       	adc	r22, r22
 652:	82 9f       	mul	r24, r18
 654:	22 27       	eor	r18, r18
 656:	b0 0d       	add	r27, r0
 658:	a1 1d       	adc	r26, r1
 65a:	62 1f       	adc	r22, r18
 65c:	73 9f       	mul	r23, r19
 65e:	b0 0d       	add	r27, r0
 660:	a1 1d       	adc	r26, r1
 662:	62 1f       	adc	r22, r18
 664:	83 9f       	mul	r24, r19
 666:	a0 0d       	add	r26, r0
 668:	61 1d       	adc	r22, r1
 66a:	22 1f       	adc	r18, r18
 66c:	74 9f       	mul	r23, r20
 66e:	33 27       	eor	r19, r19
 670:	a0 0d       	add	r26, r0
 672:	61 1d       	adc	r22, r1
 674:	23 1f       	adc	r18, r19
 676:	84 9f       	mul	r24, r20
 678:	60 0d       	add	r22, r0
 67a:	21 1d       	adc	r18, r1
 67c:	82 2f       	mov	r24, r18
 67e:	76 2f       	mov	r23, r22
 680:	6a 2f       	mov	r22, r26
 682:	11 24       	eor	r1, r1
 684:	9f 57       	subi	r25, 0x7F	; 127
 686:	50 40       	sbci	r21, 0x00	; 0
 688:	9a f0       	brmi	.+38     	; 0x6b0 <__mulsf3_pse+0x88>
 68a:	f1 f0       	breq	.+60     	; 0x6c8 <__mulsf3_pse+0xa0>
 68c:	88 23       	and	r24, r24
 68e:	4a f0       	brmi	.+18     	; 0x6a2 <__mulsf3_pse+0x7a>
 690:	ee 0f       	add	r30, r30
 692:	ff 1f       	adc	r31, r31
 694:	bb 1f       	adc	r27, r27
 696:	66 1f       	adc	r22, r22
 698:	77 1f       	adc	r23, r23
 69a:	88 1f       	adc	r24, r24
 69c:	91 50       	subi	r25, 0x01	; 1
 69e:	50 40       	sbci	r21, 0x00	; 0
 6a0:	a9 f7       	brne	.-22     	; 0x68c <__mulsf3_pse+0x64>
 6a2:	9e 3f       	cpi	r25, 0xFE	; 254
 6a4:	51 05       	cpc	r21, r1
 6a6:	80 f0       	brcs	.+32     	; 0x6c8 <__mulsf3_pse+0xa0>
 6a8:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_inf>
 6ac:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <__fp_szero>
 6b0:	5f 3f       	cpi	r21, 0xFF	; 255
 6b2:	e4 f3       	brlt	.-8      	; 0x6ac <__mulsf3_pse+0x84>
 6b4:	98 3e       	cpi	r25, 0xE8	; 232
 6b6:	d4 f3       	brlt	.-12     	; 0x6ac <__mulsf3_pse+0x84>
 6b8:	86 95       	lsr	r24
 6ba:	77 95       	ror	r23
 6bc:	67 95       	ror	r22
 6be:	b7 95       	ror	r27
 6c0:	f7 95       	ror	r31
 6c2:	e7 95       	ror	r30
 6c4:	9f 5f       	subi	r25, 0xFF	; 255
 6c6:	c1 f7       	brne	.-16     	; 0x6b8 <__mulsf3_pse+0x90>
 6c8:	fe 2b       	or	r31, r30
 6ca:	88 0f       	add	r24, r24
 6cc:	91 1d       	adc	r25, r1
 6ce:	96 95       	lsr	r25
 6d0:	87 95       	ror	r24
 6d2:	97 f9       	bld	r25, 7
 6d4:	08 95       	ret

000006d6 <__divmodhi4>:
 6d6:	97 fb       	bst	r25, 7
 6d8:	07 2e       	mov	r0, r23
 6da:	16 f4       	brtc	.+4      	; 0x6e0 <__divmodhi4+0xa>
 6dc:	00 94       	com	r0
 6de:	07 d0       	rcall	.+14     	; 0x6ee <__divmodhi4_neg1>
 6e0:	77 fd       	sbrc	r23, 7
 6e2:	09 d0       	rcall	.+18     	; 0x6f6 <__divmodhi4_neg2>
 6e4:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__udivmodhi4>
 6e8:	07 fc       	sbrc	r0, 7
 6ea:	05 d0       	rcall	.+10     	; 0x6f6 <__divmodhi4_neg2>
 6ec:	3e f4       	brtc	.+14     	; 0x6fc <__divmodhi4_exit>

000006ee <__divmodhi4_neg1>:
 6ee:	90 95       	com	r25
 6f0:	81 95       	neg	r24
 6f2:	9f 4f       	sbci	r25, 0xFF	; 255
 6f4:	08 95       	ret

000006f6 <__divmodhi4_neg2>:
 6f6:	70 95       	com	r23
 6f8:	61 95       	neg	r22
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255

000006fc <__divmodhi4_exit>:
 6fc:	08 95       	ret

000006fe <__udivmodhi4>:
 6fe:	aa 1b       	sub	r26, r26
 700:	bb 1b       	sub	r27, r27
 702:	51 e1       	ldi	r21, 0x11	; 17
 704:	07 c0       	rjmp	.+14     	; 0x714 <__udivmodhi4_ep>

00000706 <__udivmodhi4_loop>:
 706:	aa 1f       	adc	r26, r26
 708:	bb 1f       	adc	r27, r27
 70a:	a6 17       	cp	r26, r22
 70c:	b7 07       	cpc	r27, r23
 70e:	10 f0       	brcs	.+4      	; 0x714 <__udivmodhi4_ep>
 710:	a6 1b       	sub	r26, r22
 712:	b7 0b       	sbc	r27, r23

00000714 <__udivmodhi4_ep>:
 714:	88 1f       	adc	r24, r24
 716:	99 1f       	adc	r25, r25
 718:	5a 95       	dec	r21
 71a:	a9 f7       	brne	.-22     	; 0x706 <__udivmodhi4_loop>
 71c:	80 95       	com	r24
 71e:	90 95       	com	r25
 720:	bc 01       	movw	r22, r24
 722:	cd 01       	movw	r24, r26
 724:	08 95       	ret

00000726 <_exit>:
 726:	f8 94       	cli

00000728 <__stop_program>:
 728:	ff cf       	rjmp	.-2      	; 0x728 <__stop_program>
